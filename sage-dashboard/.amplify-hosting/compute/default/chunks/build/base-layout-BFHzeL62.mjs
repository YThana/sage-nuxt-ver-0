import { _ as __nuxt_component_4, g as useUI, o as o$1, w, e as w$2, h, t, u as u$1$1, d as i$1, A as A$1, I as I$1, l, N, z as dropdown, j as l$1, n as useId, B as getNuxtLinkProps, i as i$2, m as o$2, C as v$1, f as N$1, D as _, O as O$1 } from './Input-DoCQJjVJ.mjs';
import { _ as __nuxt_component_0$2 } from './nuxt-link-Cs_hzKNb.mjs';
import { defineComponent, toRef, computed, ref, watch, useSSRContext, onMounted, watchEffect, provide, onUnmounted, nextTick, inject, mergeProps, unref, withCtx, createVNode, resolveComponent, renderSlot, resolveDynamicComponent, createTextVNode, toDisplayString, openBlock, createBlock, createCommentVNode, Fragment, renderList, Transition } from 'vue';
import { ssrRenderAttrs, ssrInterpolate, ssrRenderComponent, ssrRenderClass, ssrRenderSlot, ssrIncludeBooleanAttr, ssrRenderStyle, ssrRenderList, ssrRenderVNode } from 'vue/server-renderer';
import { m as mergeConfig, a as appConfig, _ as _export_sfc } from './server.mjs';
import { twMerge, twJoin } from 'tailwind-merge';
import { q as defu } from '../../index.mjs';

const _sfc_main$6 = {};
function _sfc_ssrRender$4(_ctx, _push, _parent, _attrs) {
  _push(`<svg${ssrRenderAttrs(mergeProps({
    xmlns: "http://www.w3.org/2000/svg",
    width: "210",
    height: "38",
    viewBox: "0 0 210 38",
    fill: "none"
  }, _attrs))}><path d="M43.0045 31.4591L45.8283 25.9696H47.2675V34.4994H45.6188V29.8104L43.5784 33.4701H42.3122L40.2536 29.696V34.4994H38.6049V25.9696H40.0896L42.9499 31.4591H43.0227H43.0045Z"></path><path d="M49.9362 32.3841C49.9362 32.0696 49.9817 31.8027 50.0728 31.5644C50.1639 31.3262 50.3188 31.126 50.5283 30.964C50.7378 30.802 51.0111 30.6781 51.3481 30.5923C51.6851 30.5066 52.0859 30.4684 52.5687 30.4684H52.9786C53.1426 30.4684 53.3065 30.4684 53.4705 30.478C53.6345 30.478 53.7802 30.497 53.8986 30.5161V30.2302C53.8986 29.8871 53.7893 29.6393 53.5616 29.4963C53.3339 29.3534 52.9786 29.2771 52.4958 29.2771C52.2134 29.2771 51.9128 29.2962 51.5758 29.3438C51.2479 29.3915 50.9291 29.4582 50.6194 29.544L50.5101 28.143C50.6649 28.1049 50.838 28.0572 51.0293 28.0191C51.2206 27.981 51.421 27.9429 51.6396 27.9143C51.8582 27.8857 52.0677 27.8666 52.2863 27.8476C52.5049 27.8285 52.7236 27.819 52.9331 27.819C53.7711 27.819 54.4178 28.0096 54.8824 28.3813C55.347 28.753 55.5747 29.3534 55.5747 30.1635V33.8708C55.5747 34.09 55.5747 34.3092 55.602 34.5189H54.1446C54.1081 34.3187 54.0808 34.1091 54.0626 33.8899H54.0353C53.8257 34.1281 53.5707 34.3092 53.2792 34.4426C52.9786 34.5761 52.6416 34.6428 52.2499 34.6428C51.9037 34.6428 51.5849 34.5856 51.3025 34.4712C51.0202 34.3569 50.7742 34.1948 50.5647 33.9947C50.3552 33.7946 50.2004 33.5563 50.091 33.2799C49.9817 33.0035 49.918 32.7081 49.918 32.3936L49.9362 32.3841ZM53.9077 31.6883H52.4503C52.2134 31.6883 52.0222 31.7455 51.8764 31.8694C51.7398 31.9838 51.6669 32.1553 51.6669 32.3745C51.6669 32.6604 51.7671 32.8796 51.9584 33.0417C52.1497 33.1941 52.4047 33.2704 52.7053 33.2704C52.924 33.2704 53.1061 33.2418 53.2519 33.1846C53.3976 33.1274 53.5343 33.0417 53.6436 32.9464C53.8166 32.7653 53.9077 32.5556 53.9077 32.3078V31.6979V31.6883Z" fill="#272626"></path><path d="M64.3024 34.4994H63.5099C63.2002 34.4994 62.9452 34.4423 62.7721 34.3184C62.5899 34.204 62.3986 34.0134 62.1982 33.7465L60.7408 31.8119C60.6588 31.7165 60.5586 31.6689 60.4402 31.6689H60.2489V34.4804H58.5637V25.7028L60.2489 25.2358V30.1821H60.7317L62.4806 27.8948H64.4573L62.1527 30.8969L63.5281 32.6887C63.6101 32.803 63.683 32.8793 63.765 32.9269C63.847 32.9746 63.9472 32.9936 64.0747 32.9936H64.7123L64.3115 34.4804L64.3024 34.4994Z" fill="#272626"></path><path d="M68.8908 26.9323H67.1783V25.3026L68.8908 24.8356V26.9323ZM67.1875 27.9139H68.8726V34.4994H67.1875V27.9139Z" fill="#272626"></path><path d="M75.5792 27.7994C76.2806 27.7994 76.818 28.0186 77.1915 28.457C77.3737 28.6667 77.5103 28.924 77.6014 29.229C77.6925 29.534 77.738 29.9152 77.738 30.3536V34.4898H76.0528V30.5537C76.0528 30.2869 76.0255 30.0772 75.98 29.9152C75.9344 29.7627 75.8525 29.6388 75.7523 29.5435C75.5701 29.372 75.3059 29.2957 74.978 29.2957C74.7411 29.2957 74.4952 29.3434 74.2584 29.4292C74.0215 29.5149 73.8211 29.6198 73.6481 29.7341V34.4898H71.9629V27.9043H73.4568L73.5388 28.4856C73.8302 28.2855 74.1582 28.114 74.5225 27.9901C74.8869 27.8566 75.2421 27.7899 75.5792 27.7899V27.7994Z" fill="#272626"></path><path d="M86.8169 33.9755C86.8169 34.5759 86.744 35.1096 86.5983 35.548C86.4526 35.9865 86.243 36.3581 85.9698 36.6536C85.6965 36.9395 85.3686 37.1587 84.986 37.3017C84.6034 37.4446 84.1753 37.5113 83.6925 37.5113C83.3282 37.5113 82.9729 37.4827 82.6085 37.4255C82.2442 37.3684 81.9163 37.2826 81.6065 37.1873L81.7614 35.7387C81.9982 35.834 82.2715 35.9102 82.5812 35.9674C82.8909 36.0341 83.1824 36.0627 83.4466 36.0627C84.6034 36.0627 85.1864 35.4909 85.1864 34.3567V33.9374C84.9769 34.128 84.7218 34.2805 84.4304 34.3949C84.1298 34.5092 83.8109 34.5664 83.4648 34.5664C82.9911 34.5664 82.563 34.4806 82.1895 34.3186C81.807 34.1471 81.4881 33.9183 81.2149 33.6229C80.9416 33.3275 80.7412 32.9653 80.5955 32.5555C80.4497 32.1457 80.3768 31.6882 80.3768 31.1926C80.3768 30.6971 80.4588 30.2682 80.6137 29.8584C80.7685 29.4486 80.9963 29.0864 81.2786 28.7814C81.561 28.4765 81.9072 28.2382 82.3171 28.0666C82.727 27.8951 83.1824 27.8093 83.6834 27.8093C84.0569 27.8093 84.403 27.8856 84.7309 28.0476C85.0589 28.2001 85.3139 28.3907 85.4779 28.6194L85.5872 27.9237H86.8169V33.9851V33.9755ZM85.1317 30.5922C85.1317 30.2015 85.0042 29.8774 84.7492 29.6296C84.4941 29.3819 84.1753 29.2675 83.7927 29.2675C83.2826 29.2675 82.8636 29.439 82.563 29.7821C82.2533 30.1252 82.1075 30.5922 82.1075 31.1736C82.1075 31.7931 82.2715 32.2791 82.5903 32.6127C82.9091 32.9462 83.3099 33.1178 83.7927 33.1178C84.0842 33.1178 84.3393 33.0701 84.5761 32.9748C84.8129 32.8795 84.9951 32.7652 85.1317 32.6222V30.5922Z" fill="#272626"></path><path d="M96.9659 25.9696C97.8039 25.9696 98.5144 26.0649 99.0974 26.246C99.6804 26.4271 100.172 26.732 100.573 27.1418C101.22 27.8185 101.548 28.8287 101.548 30.1439C101.548 30.8206 101.448 31.4401 101.256 31.9833C101.065 32.5266 100.773 32.9935 100.373 33.3748C99.9901 33.7464 99.5255 34.0228 98.979 34.2134C98.4324 34.404 97.8221 34.4994 97.1298 34.4994H94.0692V25.9696H96.9659ZM99.7897 30.1535C99.7897 29.6674 99.7441 29.2671 99.6531 28.9717C99.562 28.6667 99.4253 28.4189 99.234 28.2188C98.9972 27.9615 98.7148 27.7804 98.3778 27.6756C98.0408 27.5707 97.6582 27.5231 97.2209 27.5231H95.7817V32.9459H97.1572C97.6491 32.9459 98.0408 32.8887 98.3414 32.7648C98.642 32.6409 98.897 32.4598 99.1247 32.212C99.3433 31.9643 99.5073 31.6688 99.6166 31.3257C99.7259 30.9731 99.7897 30.5919 99.7897 30.163V30.1535Z" fill="#272626"></path><path d="M103.854 32.3841C103.854 32.0696 103.899 31.8027 103.991 31.5644C104.082 31.3262 104.236 31.126 104.446 30.964C104.656 30.802 104.929 30.6781 105.266 30.5923C105.603 30.5066 106.004 30.4684 106.486 30.4684H106.896C107.06 30.4684 107.224 30.4684 107.388 30.478C107.552 30.478 107.698 30.497 107.816 30.5161V30.2302C107.816 29.8871 107.707 29.6393 107.479 29.4963C107.252 29.3534 106.896 29.2771 106.414 29.2771C106.131 29.2771 105.831 29.2962 105.494 29.3438C105.166 29.3915 104.847 29.4582 104.537 29.544L104.428 28.143C104.583 28.1049 104.756 28.0572 104.947 28.0191C105.138 27.981 105.339 27.9429 105.557 27.9143C105.776 27.8857 105.985 27.8666 106.204 27.8476C106.423 27.8285 106.641 27.819 106.851 27.819C107.689 27.819 108.336 28.0096 108.8 28.3813C109.265 28.753 109.492 29.3534 109.492 30.1635V33.8708C109.492 34.09 109.492 34.3092 109.52 34.5189H108.062C108.026 34.3187 107.999 34.1091 107.98 33.8899H107.953C107.743 34.1281 107.488 34.3092 107.197 34.4426C106.896 34.5761 106.559 34.6428 106.168 34.6428C105.821 34.6428 105.503 34.5856 105.22 34.4712C104.938 34.3569 104.692 34.1948 104.482 33.9947C104.273 33.7946 104.118 33.5563 104.009 33.2799C103.899 33.0035 103.836 32.7081 103.836 32.3936L103.854 32.3841ZM107.825 31.6883H106.368C106.131 31.6883 105.94 31.7455 105.794 31.8694C105.658 31.9838 105.585 32.1553 105.585 32.3745C105.585 32.6604 105.685 32.8796 105.876 33.0417C106.067 33.1941 106.322 33.2704 106.623 33.2704C106.842 33.2704 107.024 33.2418 107.17 33.1846C107.315 33.1274 107.452 33.0417 107.561 32.9464C107.734 32.7653 107.825 32.5556 107.825 32.3078V31.6979V31.6883Z" fill="#272626"></path><path d="M114.055 29.4966V31.9459C114.055 32.3367 114.128 32.6131 114.274 32.7942C114.419 32.9752 114.647 33.061 114.957 33.061C115.166 33.061 115.367 33.061 115.558 33.0324C115.749 33.0038 115.913 32.9943 116.05 32.9562L116.132 34.3476C115.941 34.4143 115.704 34.4715 115.431 34.5096C115.157 34.5478 114.884 34.5668 114.62 34.5668C114.274 34.5668 113.964 34.5287 113.682 34.462C113.408 34.3857 113.172 34.2618 112.971 34.0903C112.771 33.9188 112.625 33.6805 112.516 33.385C112.406 33.0896 112.361 32.7179 112.361 32.27V26.4755L114.046 26.2086V28.0099H116.232L115.932 29.4966H114.055Z" fill="#272626"></path><path d="M118.328 32.3841C118.328 32.0696 118.374 31.8027 118.465 31.5644C118.556 31.3262 118.711 31.126 118.92 30.964C119.13 30.802 119.403 30.6781 119.74 30.5923C120.077 30.5066 120.478 30.4684 120.961 30.4684H121.371C121.535 30.4684 121.699 30.4684 121.863 30.478C122.027 30.478 122.172 30.497 122.291 30.5161V30.2302C122.291 29.8871 122.182 29.6393 121.954 29.4963C121.726 29.3534 121.371 29.2771 120.888 29.2771C120.606 29.2771 120.305 29.2962 119.968 29.3438C119.64 29.3915 119.321 29.4582 119.012 29.544L118.902 28.143C119.057 28.1049 119.23 28.0572 119.421 28.0191C119.613 27.981 119.813 27.9429 120.032 27.9143C120.25 27.8857 120.46 27.8666 120.679 27.8476C120.897 27.8285 121.116 27.819 121.325 27.819C122.163 27.819 122.81 28.0096 123.275 28.3813C123.739 28.753 123.967 29.3534 123.967 30.1635V33.8708C123.967 34.09 123.967 34.3092 123.994 34.5189H122.537C122.5 34.3187 122.473 34.1091 122.455 33.8899H122.427C122.218 34.1281 121.963 34.3092 121.671 34.4426C121.371 34.5761 121.034 34.6428 120.642 34.6428C120.296 34.6428 119.977 34.5856 119.695 34.4712C119.412 34.3569 119.166 34.1948 118.957 33.9947C118.747 33.7946 118.593 33.5563 118.483 33.2799C118.374 33.0035 118.31 32.7081 118.31 32.3936L118.328 32.3841ZM122.3 31.6883H120.842C120.606 31.6883 120.414 31.7455 120.269 31.8694C120.132 31.9838 120.059 32.1553 120.059 32.3745C120.059 32.6604 120.159 32.8796 120.351 33.0417C120.542 33.1941 120.797 33.2704 121.098 33.2704C121.316 33.2704 121.498 33.2418 121.644 33.1846C121.79 33.1274 121.926 33.0417 122.036 32.9464C122.209 32.7653 122.3 32.5556 122.3 32.3078V31.6979V31.6883Z" fill="#272626"></path><path d="M135.56 31.4591L138.384 25.9696H139.823V34.4994H138.174V29.8104L136.134 33.4701H134.868L132.809 29.696V34.4994H131.161V25.9696H132.645L135.506 31.4591H135.578H135.56Z" fill="#272626"></path><path d="M142.493 32.3841C142.493 32.0696 142.538 31.8027 142.629 31.5644C142.721 31.3262 142.875 31.126 143.085 30.964C143.294 30.802 143.568 30.6781 143.905 30.5923C144.242 30.5066 144.643 30.4684 145.125 30.4684H145.535C145.699 30.4684 145.863 30.4684 146.027 30.478C146.191 30.478 146.337 30.497 146.455 30.5161V30.2302C146.455 29.8871 146.346 29.6393 146.118 29.4963C145.89 29.3534 145.535 29.2771 145.052 29.2771C144.77 29.2771 144.469 29.2962 144.132 29.3438C143.805 29.3915 143.486 29.4582 143.176 29.544L143.067 28.143C143.222 28.1049 143.395 28.0572 143.586 28.0191C143.777 27.981 143.978 27.9429 144.196 27.9143C144.415 27.8857 144.624 27.8666 144.843 27.8476C145.062 27.8285 145.28 27.819 145.49 27.819C146.328 27.819 146.974 28.0096 147.439 28.3813C147.904 28.753 148.131 29.3534 148.131 30.1635V33.8708C148.131 34.09 148.131 34.3092 148.159 34.5189H146.701C146.665 34.3187 146.637 34.1091 146.619 33.8899H146.592C146.382 34.1281 146.127 34.3092 145.836 34.4426C145.535 34.5761 145.198 34.6428 144.807 34.6428C144.46 34.6428 144.142 34.5856 143.859 34.4712C143.577 34.3569 143.331 34.1948 143.121 33.9947C142.912 33.7946 142.757 33.5563 142.648 33.2799C142.538 33.0035 142.475 32.7081 142.475 32.3936L142.493 32.3841ZM146.464 31.6883H145.007C144.77 31.6883 144.579 31.7455 144.433 31.8694C144.296 31.9838 144.224 32.1553 144.224 32.3745C144.224 32.6604 144.324 32.8796 144.515 33.0417C144.706 33.1941 144.961 33.2704 145.262 33.2704C145.481 33.2704 145.663 33.2418 145.809 33.1846C145.954 33.1274 146.091 33.0417 146.2 32.9464C146.373 32.7653 146.464 32.5556 146.464 32.3078V31.6979V31.6883Z" fill="#272626"></path><path d="M156.858 34.4994H156.066C155.756 34.4994 155.501 34.4423 155.328 34.3184C155.146 34.204 154.955 34.0134 154.754 33.7465L153.297 31.8119C153.215 31.7165 153.115 31.6689 152.996 31.6689H152.805V34.4804H151.12V25.7028L152.805 25.2358V30.1821H153.288L155.037 27.8948H157.013L154.709 30.8969L156.084 32.6887C156.166 32.803 156.239 32.8793 156.321 32.9269C156.403 32.9746 156.503 32.9936 156.631 32.9936H157.268L156.867 34.4804L156.858 34.4994Z" fill="#272626"></path><path d="M162.523 34.6331C161.33 34.6331 160.455 34.3377 159.882 33.7373C159.308 33.1368 159.025 32.3077 159.025 31.2403C159.025 30.7542 159.098 30.2968 159.235 29.887C159.371 29.4676 159.581 29.1055 159.854 28.8005C160.127 28.4955 160.464 28.2477 160.865 28.0762C161.266 27.8951 161.722 27.8093 162.232 27.8093C162.742 27.8093 163.17 27.8951 163.525 28.0666C163.88 28.2382 164.163 28.4669 164.39 28.7624C164.609 29.0483 164.773 29.3818 164.882 29.7631C164.992 30.1348 165.037 30.535 165.037 30.9448C165.037 31.0973 165.037 31.2498 165.019 31.4023C165.01 31.5548 164.992 31.7073 164.964 31.8407H160.82C160.82 32.241 160.993 32.5555 161.321 32.8033C161.649 33.0511 162.095 33.175 162.678 33.175C163.006 33.175 163.325 33.1559 163.634 33.1083C163.944 33.0701 164.227 33.0129 164.472 32.9558L164.618 34.3472C164.309 34.4425 163.971 34.5092 163.598 34.5569C163.225 34.6045 162.869 34.6331 162.532 34.6331H162.523ZM162.159 29.115C161.731 29.115 161.403 29.2484 161.184 29.5153C160.965 29.7821 160.838 30.1443 160.838 30.6017H163.334C163.334 30.1633 163.243 29.8107 163.061 29.5343C162.878 29.258 162.578 29.115 162.168 29.115H162.159Z" fill="#272626"></path><path d="M174.121 33.0981C174.631 33.0981 175.004 33.0028 175.223 32.8122C175.442 32.6216 175.551 32.3738 175.551 32.0784C175.551 31.8211 175.478 31.6114 175.323 31.4589C175.269 31.4113 175.196 31.3636 175.123 31.316C175.041 31.2683 174.941 31.2207 174.813 31.173C174.686 31.1253 174.54 31.0777 174.376 31.011C174.203 30.9538 174.002 30.8871 173.775 30.8108C173.392 30.6869 173.073 30.544 172.8 30.382C172.527 30.22 172.308 30.0389 172.135 29.8387C171.962 29.6386 171.825 29.4003 171.743 29.1335C171.661 28.8666 171.616 28.5617 171.616 28.2186C171.616 27.8469 171.689 27.5133 171.843 27.2179C171.998 26.9224 172.208 26.6746 172.481 26.465C172.754 26.2553 173.082 26.1028 173.465 25.9884C173.847 25.8836 174.276 25.8264 174.731 25.8264C175.123 25.8264 175.514 25.855 175.897 25.9027C176.28 25.9503 176.608 26.017 176.89 26.1028L176.826 27.6849C176.48 27.58 176.134 27.5038 175.788 27.4466C175.442 27.3894 175.114 27.3608 174.813 27.3608C174.321 27.3608 173.966 27.4371 173.729 27.58C173.501 27.723 173.383 27.9136 173.383 28.1518C173.383 28.2948 173.41 28.4187 173.456 28.5235C173.501 28.6284 173.592 28.7332 173.72 28.8285C173.847 28.9238 174.011 29.0191 174.221 29.1049C174.43 29.1907 174.704 29.286 175.032 29.3908C175.442 29.5242 175.788 29.6672 176.079 29.8101C176.371 29.9531 176.608 30.1247 176.79 30.3153C176.972 30.5059 177.109 30.7251 177.2 30.9824C177.291 31.2302 177.336 31.5352 177.336 31.8783C177.336 32.3071 177.263 32.6883 177.109 33.0314C176.954 33.3745 176.744 33.6604 176.471 33.8987C176.198 34.137 175.87 34.318 175.496 34.4419C175.114 34.5658 174.704 34.6326 174.257 34.6326C173.729 34.6326 173.228 34.5849 172.773 34.4896C172.317 34.3943 171.889 34.2704 171.506 34.1084L171.625 32.4787C171.989 32.6597 172.39 32.8027 172.827 32.9171C173.274 33.0314 173.702 33.0981 174.13 33.0981H174.121Z" fill="#272626"></path><path d="M183.129 34.6331C181.936 34.6331 181.061 34.3377 180.487 33.7373C179.914 33.1368 179.631 32.3077 179.631 31.2403C179.631 30.7542 179.704 30.2968 179.841 29.887C179.977 29.4676 180.187 29.1055 180.46 28.8005C180.733 28.4955 181.07 28.2477 181.471 28.0762C181.872 27.8951 182.328 27.8093 182.838 27.8093C183.348 27.8093 183.776 27.8951 184.131 28.0666C184.486 28.2382 184.769 28.4669 184.996 28.7624C185.215 29.0483 185.379 29.3818 185.488 29.7631C185.598 30.1348 185.643 30.535 185.643 30.9448C185.643 31.0973 185.643 31.2498 185.625 31.4023C185.616 31.5548 185.598 31.7073 185.57 31.8407H181.426C181.426 32.241 181.599 32.5555 181.927 32.8033C182.255 33.0511 182.701 33.175 183.284 33.175C183.612 33.175 183.931 33.1559 184.24 33.1083C184.55 33.0701 184.832 33.0129 185.078 32.9558L185.224 34.3472C184.914 34.4425 184.577 34.5092 184.204 34.5569C183.83 34.6045 183.475 34.6331 183.138 34.6331H183.129ZM182.765 29.115C182.337 29.115 182.009 29.2484 181.79 29.5153C181.571 29.7821 181.444 30.1443 181.444 30.6017H183.94C183.94 30.1633 183.849 29.8107 183.667 29.5343C183.484 29.258 183.184 29.115 182.774 29.115H182.765Z" fill="#272626"></path><path d="M191.976 27.7994C192.677 27.7994 193.215 28.0186 193.588 28.457C193.77 28.6667 193.907 28.924 193.998 29.229C194.089 29.534 194.135 29.9152 194.135 30.3536V34.4898H192.449V30.5537C192.449 30.2869 192.422 30.0772 192.377 29.9152C192.331 29.7532 192.249 29.6388 192.149 29.5435C191.967 29.372 191.703 29.2957 191.375 29.2957C191.138 29.2957 190.892 29.3434 190.655 29.4292C190.418 29.5149 190.218 29.6198 190.045 29.7341V34.4898H188.359V27.9043H189.853L189.935 28.4856C190.227 28.2855 190.555 28.114 190.919 27.9901C191.283 27.8566 191.639 27.7899 191.976 27.7899V27.7994Z" fill="#272626"></path><path d="M198.786 33.1656C199.178 33.1656 199.46 33.1084 199.615 33.0036C199.779 32.8892 199.852 32.7558 199.852 32.5842C199.852 32.4984 199.834 32.4317 199.806 32.3745C199.77 32.3174 199.715 32.2602 199.624 32.1935C199.533 32.1363 199.414 32.0791 199.26 32.0124C199.105 31.9552 198.895 31.8885 198.649 31.8122C197.975 31.6121 197.483 31.3453 197.192 31.0117C196.891 30.6781 196.746 30.2588 196.746 29.7537C196.746 29.401 196.818 29.1056 196.973 28.8578C197.128 28.61 197.319 28.4099 197.565 28.2479C197.811 28.0858 198.094 27.9715 198.413 27.9048C198.731 27.838 199.05 27.7999 199.387 27.7999C199.724 27.7999 200.043 27.819 200.344 27.8666C200.644 27.9143 200.936 27.9715 201.218 28.0477L201.1 29.4963C200.854 29.401 200.599 29.3343 200.325 29.2867C200.052 29.239 199.779 29.22 199.515 29.22C199.196 29.22 198.941 29.2581 198.759 29.3343C198.576 29.4106 198.485 29.5345 198.485 29.6965C198.485 29.8013 198.522 29.8871 198.586 29.9538C198.658 30.0301 198.75 30.0872 198.859 30.1444C198.968 30.2016 199.114 30.2493 199.278 30.3064C199.442 30.3541 199.615 30.4113 199.797 30.4685C200.143 30.5828 200.435 30.7067 200.662 30.8306C200.89 30.9545 201.072 31.0975 201.209 31.25C201.346 31.4024 201.446 31.574 201.5 31.7646C201.555 31.9552 201.582 32.1553 201.582 32.3841C201.582 32.7844 201.51 33.1275 201.373 33.4134C201.227 33.6993 201.045 33.928 200.808 34.0996C200.571 34.2806 200.298 34.4045 199.988 34.4903C199.679 34.5761 199.351 34.6142 199.014 34.6142C198.157 34.6142 197.392 34.4903 196.709 34.252L196.846 32.7462C197.146 32.8606 197.465 32.9654 197.811 33.0321C198.157 33.1084 198.485 33.1465 198.795 33.1465L198.786 33.1656Z" fill="#272626"></path><path d="M207.278 34.6331C206.084 34.6331 205.21 34.3377 204.636 33.7373C204.062 33.1368 203.78 32.3077 203.78 31.2403C203.78 30.7542 203.853 30.2968 203.989 29.887C204.126 29.4676 204.335 29.1055 204.609 28.8005C204.882 28.4955 205.219 28.2477 205.62 28.0762C206.021 27.8951 206.476 27.8093 206.986 27.8093C207.496 27.8093 207.924 27.8951 208.28 28.0666C208.635 28.2382 208.917 28.4669 209.145 28.7624C209.364 29.0483 209.528 29.3818 209.637 29.7631C209.746 30.1348 209.792 30.535 209.792 30.9448C209.792 31.0973 209.792 31.2498 209.774 31.4023C209.764 31.5548 209.746 31.7073 209.719 31.8407H205.574C205.574 32.241 205.747 32.5555 206.075 32.8033C206.403 33.0511 206.85 33.175 207.433 33.175C207.76 33.175 208.079 33.1559 208.389 33.1083C208.699 33.0701 208.981 33.0129 209.227 32.9558L209.373 34.3472C209.063 34.4425 208.726 34.5092 208.353 34.5569C207.979 34.6045 207.624 34.6331 207.287 34.6331H207.278ZM206.913 29.115C206.485 29.115 206.157 29.2484 205.939 29.5153C205.72 29.7821 205.592 30.1443 205.592 30.6017H208.088C208.088 30.1633 207.997 29.8107 207.815 29.5343C207.633 29.258 207.332 29.115 206.922 29.115H206.913Z" fill="#272626"></path><path d="M32.163 33.8422V5.40332L4.97253 33.8422H32.163ZM28.0822 15.6676H30.6509V22.3961L28.0822 24.0639V15.6676ZM28.0822 26.3798L30.6509 24.712V32.4984H28.0822V26.3798ZM23.555 19.1843H26.1237V25.341L24.0651 26.6753L23.555 26.4084V19.1843ZM23.555 28.5909L24.1835 28.9149L26.1237 27.6569V32.4984H23.555V28.5909ZM19.0278 21.4621H21.5965V25.4077L20.385 24.7787L19.0278 25.3696V21.4621ZM20.3121 26.9135L21.5965 27.5807V32.4984H19.0278V27.4663L20.3121 26.9135Z" fill="#272626"></path><path d="M0 0.248169V37.5789H35.6801V0.248169H0ZM26.0883 2.15426L24.2665 4.06035H16.0228L14.201 2.15426H26.0883ZM23.0641 8.55872C23.0641 9.15914 22.5995 9.64519 22.0256 9.64519C21.4518 9.64519 20.9872 9.15914 20.9872 8.55872C20.9872 7.9583 21.4518 7.47225 22.0256 7.47225C22.5995 7.47225 23.0641 7.9583 23.0641 8.55872ZM16.4691 11.8277C15.8953 11.8277 15.4307 11.3416 15.4307 10.7412C15.4307 10.1408 15.8953 9.65472 16.4691 9.65472C17.043 9.65472 17.5076 10.1408 17.5076 10.7412C17.5076 11.3416 17.043 11.8277 16.4691 11.8277ZM17.5076 15.6017C17.5076 16.2021 17.043 16.6882 16.4691 16.6882C15.8953 16.6882 15.4307 16.2021 15.4307 15.6017C15.4307 15.0013 15.8953 14.5152 16.4691 14.5152C17.043 14.5152 17.5076 15.0013 17.5076 15.6017ZM10.9399 14.906C11.5138 14.906 11.9784 15.392 11.9784 15.9925C11.9784 16.5929 11.5138 17.0789 10.9399 17.0789C10.3661 17.0789 9.90152 16.5929 9.90152 15.9925C9.90152 15.392 10.3661 14.906 10.9399 14.906ZM8.86309 20.8911C9.43696 20.8911 9.90152 21.3772 9.90152 21.9776C9.90152 22.578 9.43696 23.0641 8.86309 23.0641C8.28922 23.0641 7.82466 22.578 7.82466 21.9776C7.82466 21.3772 8.28922 20.8911 8.86309 20.8911ZM1.87646 16.002L3.69827 17.9081V25.5992L1.87646 27.5052V16.002ZM33.9858 35.7681H1.86735V30.1928L3.68916 28.2867V32.5183L30.8796 4.05082H26.8443L28.657 2.15426H33.9767V35.7491L33.9858 35.7681Z" fill="#272626"></path><path d="M51.1384 1.897C49.8175 0.829595 48.0048 0.30542 45.682 0.30542H38.5952V20.1764H42.5941V13.9721H46.0009C48.3692 13.9721 50.1546 13.3526 51.3388 12.1136C52.5138 10.8747 53.1059 9.14968 53.1059 6.97673C53.1059 4.67037 52.4501 2.98348 51.1475 1.897H51.1384ZM48.2052 9.45465C47.6587 10.0455 46.8207 10.3315 45.682 10.3315H42.5941V3.91746H45.6092C46.6749 3.91746 47.513 4.17478 48.105 4.6513C48.7154 5.14689 49.0068 5.95698 49.0068 7.07204C49.0068 8.0918 48.7518 8.88282 48.2144 9.45465H48.2052Z" fill="#272626"></path><path d="M65.1574 0.2677H61.5229L53.6891 20.1768H58.0979L59.528 16.2598H67.0885L68.5004 20.1768H72.7725L65.1574 0.2677ZM60.8215 12.6478L63.1807 5.96691H63.4357L65.795 12.6478H60.8215Z" fill="#272626"></path><path d="M88.7862 0.30542V12.7331L78.9758 0.30542H76.1338V20.1764H79.8776V7.38654L89.8247 20.1764H92.53V0.30542H88.7862Z" fill="#272626"></path><path d="M107.176 0.2677H103.541L95.7076 20.1768H100.116L101.547 16.2598H109.107L110.519 20.1768H114.773L107.167 0.2677H107.176ZM102.84 12.6478L105.199 5.96691H105.454L107.814 12.6478H102.84Z" fill="#272626"></path><path d="M123.945 16.5644C123.244 16.5644 122.77 16.4405 122.497 16.1831C122.224 15.9258 122.087 15.4207 122.087 14.6583V0.30542H118.088V15.9735C118.088 17.3745 118.389 18.4419 119.017 19.1281C119.627 19.8238 120.584 20.1764 121.923 20.1764H129.647L130.604 16.5644H123.945Z" fill="#272626"></path><path d="M142.685 0.305551L138.304 8.8639H138.231L133.786 0.305551H129.177L136.172 13.1431V20.1765H140.153V13.1717L147.149 0.296021H142.676L142.685 0.305551Z" fill="#272626"></path><path d="M149.56 0.30542V3.91746H155.472V20.1764H159.534V3.91746H164.945L165.901 0.30542H149.551H149.56Z" fill="#272626"></path><path d="M169.164 20.1764H173.163V5.51858L169.164 6.77659V20.1764ZM169.164 0.30542V4.15572L173.163 2.91676V0.30542H169.164Z" fill="#272626"></path><path d="M192.521 16.087C191.883 16.3062 191.154 16.4873 190.316 16.6112C189.478 16.7542 188.658 16.8209 187.82 16.8209C185.798 16.8209 184.25 16.23 183.138 15.0387C182.027 13.8283 181.48 12.2177 181.48 10.1877C181.48 9.13932 181.635 8.21487 181.954 7.40478C182.273 6.59469 182.71 5.9085 183.275 5.35574C183.84 4.80297 184.505 4.36457 185.27 4.07866C186.044 3.79274 186.882 3.64979 187.775 3.64979C188.667 3.64979 189.506 3.74509 190.362 3.90711C191.2 4.07866 191.901 4.26927 192.448 4.47894L192.785 0.838304C192.22 0.619103 191.509 0.428495 190.644 0.266477C189.779 0.10446 188.759 0.00915527 187.583 0.00915527C186.035 0.00915527 184.614 0.266478 183.375 0.75253C182.109 1.25764 181.052 1.9629 180.169 2.86829C179.285 3.79274 178.602 4.86968 178.119 6.14676C177.636 7.40478 177.391 8.80576 177.391 10.3306C177.391 11.7507 177.591 13.0659 178.01 14.2953C178.42 15.5247 179.048 16.5826 179.895 17.5071C180.743 18.4315 181.827 19.1463 183.102 19.6895C184.377 20.2137 185.898 20.4806 187.647 20.4806C188.649 20.4806 189.606 20.4043 190.535 20.2423C191.446 20.0803 192.22 19.8801 192.83 19.6228L192.53 16.087H192.521Z" fill="#272626"></path><path d="M209.718 11.9702C209.508 11.3794 209.189 10.8742 208.761 10.4263C208.333 9.99744 207.768 9.59716 207.103 9.24454C206.438 8.91097 205.609 8.57741 204.653 8.27243C203.897 8.03417 203.25 7.81497 202.767 7.6053C202.285 7.39563 201.902 7.19549 201.611 6.95723C201.319 6.73803 201.128 6.49977 201 6.26151C200.891 6.02324 200.836 5.71827 200.836 5.3847C200.836 4.84147 201.091 4.39354 201.638 4.05997C202.166 3.72641 203.004 3.56439 204.143 3.56439C204.853 3.56439 205.618 3.6311 206.42 3.77406C207.222 3.89795 208.032 4.08856 208.834 4.32683L208.971 0.64807C208.315 0.457461 207.54 0.295444 206.648 0.171548C205.764 0.0571825 204.853 0 203.942 0C202.877 0 201.893 0.123896 200.991 0.381218C200.098 0.63854 199.315 1.0007 198.696 1.49628C198.058 1.9728 197.557 2.54463 197.202 3.24988C196.837 3.93608 196.655 4.69851 196.655 5.57531C196.655 6.36634 196.765 7.09065 196.956 7.69107C197.156 8.31055 197.457 8.87285 197.867 9.33031C198.277 9.80683 198.796 10.2166 199.415 10.6074C200.053 10.9695 200.8 11.3031 201.683 11.5986C202.23 11.7701 202.704 11.9321 203.095 12.0751C203.487 12.218 203.824 12.3324 204.115 12.4372C204.407 12.5421 204.644 12.6564 204.826 12.7517C205.026 12.8661 205.172 12.9709 205.309 13.1044C205.655 13.457 205.837 13.9335 205.837 14.5339C205.837 15.2201 205.582 15.792 205.081 16.2399C204.58 16.6973 203.724 16.9261 202.531 16.9261C201.529 16.9261 200.527 16.7831 199.488 16.5163C198.45 16.2494 197.53 15.8968 196.673 15.4775L196.4 19.2801C197.302 19.6423 198.286 19.9472 199.351 20.1569C200.417 20.3761 201.574 20.4905 202.804 20.4905C203.851 20.4905 204.826 20.3284 205.71 20.0425C206.575 19.7376 207.34 19.3278 207.978 18.7655C208.615 18.2222 209.116 17.5551 209.472 16.7641C209.836 15.973 210 15.0581 210 14.0765C210 13.2664 209.909 12.5611 209.699 11.9798L209.718 11.9702Z" fill="#272626"></path></svg>`);
}
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/home/icons/icon-logo.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
const __nuxt_component_2$1 = /* @__PURE__ */ _export_sfc(_sfc_main$6, [["ssrRender", _sfc_ssrRender$4]]);
const avatar = {
  wrapper: "relative inline-flex items-center justify-center flex-shrink-0",
  background: "bg-gray-100 dark:bg-gray-800",
  rounded: "rounded-full",
  text: "font-medium leading-none text-gray-900 dark:text-white truncate",
  placeholder: "font-medium leading-none text-gray-500 dark:text-gray-400 truncate",
  size: {
    "3xs": "h-4 w-4 text-[8px]",
    "2xs": "h-5 w-5 text-[10px]",
    xs: "h-6 w-6 text-xs",
    sm: "h-8 w-8 text-sm",
    md: "h-10 w-10 text-base",
    lg: "h-12 w-12 text-lg",
    xl: "h-14 w-14 text-xl",
    "2xl": "h-16 w-16 text-2xl",
    "3xl": "h-20 w-20 text-3xl"
  },
  chip: {
    base: "absolute rounded-full ring-1 ring-white dark:ring-gray-900 flex items-center justify-center text-white dark:text-gray-900 font-medium",
    background: "bg-{color}-500 dark:bg-{color}-400",
    position: {
      "top-right": "top-0 right-0",
      "bottom-right": "bottom-0 right-0",
      "top-left": "top-0 left-0",
      "bottom-left": "bottom-0 left-0"
    },
    size: {
      "3xs": "h-[4px] min-w-[4px] text-[4px] p-px",
      "2xs": "h-[5px] min-w-[5px] text-[5px] p-px",
      xs: "h-1.5 min-w-[0.375rem] text-[6px] p-px",
      sm: "h-2 min-w-[0.5rem] text-[7px] p-0.5",
      md: "h-2.5 min-w-[0.625rem] text-[8px] p-0.5",
      lg: "h-3 min-w-[0.75rem] text-[10px] p-0.5",
      xl: "h-3.5 min-w-[0.875rem] text-[11px] p-1",
      "2xl": "h-4 min-w-[1rem] text-[12px] p-1",
      "3xl": "h-5 min-w-[1.25rem] text-[14px] p-1"
    }
  },
  icon: {
    base: "text-gray-500 dark:text-gray-400 flex-shrink-0",
    size: {
      "3xs": "h-2 w-2",
      "2xs": "h-2.5 w-2.5",
      xs: "h-3 w-3",
      sm: "h-4 w-4",
      md: "h-5 w-5",
      lg: "h-6 w-6",
      xl: "h-7 w-7",
      "2xl": "h-8 w-8",
      "3xl": "h-10 w-10"
    }
  },
  default: {
    size: "sm",
    icon: null,
    chipColor: null,
    chipPosition: "top-right"
  }
};
const kbd = {
  base: "inline-flex items-center justify-center text-gray-900 dark:text-white",
  padding: "px-1",
  size: {
    xs: "h-4 min-w-[16px] text-[10px]",
    sm: "h-5 min-w-[20px] text-[11px]",
    md: "h-6 min-w-[24px] text-[12px]"
  },
  rounded: "rounded",
  font: "font-medium font-sans",
  background: "bg-gray-100 dark:bg-gray-800",
  ring: "ring-1 ring-gray-300 dark:ring-gray-700 ring-inset",
  default: {
    size: "sm"
  }
};
const config$2 = mergeConfig(appConfig.ui.strategy, appConfig.ui.avatar, avatar);
const _sfc_main$5 = defineComponent({
  components: {
    UIcon: __nuxt_component_4
  },
  inheritAttrs: false,
  props: {
    src: {
      type: [String, Boolean],
      default: null
    },
    alt: {
      type: String,
      default: null
    },
    text: {
      type: String,
      default: null
    },
    icon: {
      type: String,
      default: () => config$2.default.icon
    },
    size: {
      type: String,
      default: () => config$2.default.size,
      validator(value) {
        return Object.keys(config$2.size).includes(value);
      }
    },
    chipColor: {
      type: String,
      default: () => config$2.default.chipColor,
      validator(value) {
        return ["gray", ...appConfig.ui.colors].includes(value);
      }
    },
    chipPosition: {
      type: String,
      default: () => config$2.default.chipPosition,
      validator(value) {
        return Object.keys(config$2.chip.position).includes(value);
      }
    },
    chipText: {
      type: [String, Number],
      default: null
    },
    imgClass: {
      type: String,
      default: ""
    },
    class: {
      type: [String, Object, Array],
      default: () => ""
    },
    ui: {
      type: Object,
      default: () => ({})
    }
  },
  setup(props) {
    const { ui, attrs } = useUI("avatar", toRef(props, "ui"), config$2);
    const url = computed(() => {
      if (typeof props.src === "boolean") {
        return null;
      }
      return props.src;
    });
    const placeholder = computed(() => {
      return (props.alt || "").split(" ").map((word) => word.charAt(0)).join("").substring(0, 2);
    });
    const wrapperClass = computed(() => {
      return twMerge(twJoin(
        ui.value.wrapper,
        (error.value || !url.value) && ui.value.background,
        ui.value.rounded,
        ui.value.size[props.size]
      ), props.class);
    });
    const imgClass = computed(() => {
      return twMerge(twJoin(
        ui.value.rounded,
        ui.value.size[props.size]
      ), props.imgClass);
    });
    const iconClass = computed(() => {
      return twJoin(
        ui.value.icon.base,
        ui.value.icon.size[props.size]
      );
    });
    const chipClass = computed(() => {
      return twJoin(
        ui.value.chip.base,
        ui.value.chip.size[props.size],
        ui.value.chip.position[props.chipPosition],
        ui.value.chip.background.replaceAll("{color}", props.chipColor)
      );
    });
    const error = ref(false);
    watch(() => props.src, () => {
      if (error.value) {
        error.value = false;
      }
    });
    function onError() {
      error.value = true;
    }
    return {
      // eslint-disable-next-line vue/no-dupe-keys
      ui,
      attrs,
      wrapperClass,
      // eslint-disable-next-line vue/no-dupe-keys
      imgClass,
      iconClass,
      chipClass,
      url,
      placeholder,
      error,
      onError
    };
  }
});
function _sfc_ssrRender$3(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_UIcon = __nuxt_component_4;
  _push(`<span${ssrRenderAttrs(mergeProps({ class: _ctx.wrapperClass }, _attrs))}>`);
  if (_ctx.url && !_ctx.error) {
    _push(`<img${ssrRenderAttrs(mergeProps({
      class: _ctx.imgClass,
      alt: _ctx.alt,
      src: _ctx.url
    }, _ctx.attrs))}>`);
  } else if (_ctx.text) {
    _push(`<span class="${ssrRenderClass(_ctx.ui.text)}">${ssrInterpolate(_ctx.text)}</span>`);
  } else if (_ctx.icon) {
    _push(ssrRenderComponent(_component_UIcon, {
      name: _ctx.icon,
      class: _ctx.iconClass
    }, null, _parent));
  } else if (_ctx.placeholder) {
    _push(`<span class="${ssrRenderClass(_ctx.ui.placeholder)}">${ssrInterpolate(_ctx.placeholder)}</span>`);
  } else {
    _push(`<!---->`);
  }
  if (_ctx.chipColor) {
    _push(`<span class="${ssrRenderClass(_ctx.chipClass)}">${ssrInterpolate(_ctx.chipText)}</span>`);
  } else {
    _push(`<!---->`);
  }
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</span>`);
}
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/@nuxt/ui/dist/runtime/components/elements/Avatar.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
const __nuxt_component_2 = /* @__PURE__ */ _export_sfc(_sfc_main$5, [["ssrRender", _sfc_ssrRender$3]]);
const config$1 = mergeConfig(appConfig.ui.strategy, appConfig.ui.kbd, kbd);
const _sfc_main$4 = defineComponent({
  inheritAttrs: false,
  props: {
    value: {
      type: String,
      default: null
    },
    size: {
      type: String,
      default: () => config$1.default.size,
      validator(value) {
        return Object.keys(config$1.size).includes(value);
      }
    },
    class: {
      type: [String, Object, Array],
      default: () => ""
    },
    ui: {
      type: Object,
      default: () => ({})
    }
  },
  setup(props) {
    const { ui, attrs } = useUI("kbd", toRef(props, "ui"), config$1);
    const kbdClass = computed(() => {
      return twMerge(twJoin(
        ui.value.base,
        ui.value.size[props.size],
        ui.value.padding,
        ui.value.rounded,
        ui.value.font,
        ui.value.background,
        ui.value.ring
      ), props.class);
    });
    return {
      // eslint-disable-next-line vue/no-dupe-keys
      ui,
      attrs,
      kbdClass
    };
  }
});
function _sfc_ssrRender$2(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<kbd${ssrRenderAttrs(mergeProps({ class: _ctx.kbdClass }, _ctx.attrs, _attrs))}>`);
  ssrRenderSlot(_ctx.$slots, "default", {}, () => {
    _push(`${ssrInterpolate(_ctx.value)}`);
  }, _push, _parent);
  _push(`</kbd>`);
}
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/@nuxt/ui/dist/runtime/components/elements/Kbd.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
const __nuxt_component_3 = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["ssrRender", _sfc_ssrRender$2]]);
function r$1(t2, e) {
  if (t2)
    return t2;
  let n = e != null ? e : "button";
  if (typeof n == "string" && n.toLowerCase() === "button")
    return "button";
}
function s(t2, e) {
  let n = ref(r$1(t2.value.type, t2.value.as));
  return onMounted(() => {
    n.value = r$1(t2.value.type, t2.value.as);
  }), watchEffect(() => {
    var u2;
    n.value || o$1(e) && o$1(e) instanceof HTMLButtonElement && !((u2 = o$1(e)) != null && u2.hasAttribute("type")) && (n.value = "button");
  }), n;
}
function r(e) {
  return [e.screenX, e.screenY];
}
function u$1() {
  let e = ref([-1, -1]);
  return { wasMoved(n) {
    let t2 = r(n);
    return e.value[0] === t2[0] && e.value[1] === t2[1] ? false : (e.value = t2, true);
  }, update(n) {
    e.value = r(n);
  } };
}
function i({ container: e, accept: t2, walk: d, enabled: o2 }) {
  watchEffect(() => {
    let r2 = e.value;
    if (!r2 || o2 !== void 0 && !o2.value)
      return;
    let l2 = i$2(e);
    if (!l2)
      return;
    let c2 = Object.assign((f2) => t2(f2), { acceptNode: t2 }), n = l2.createTreeWalker(r2, NodeFilter.SHOW_ELEMENT, c2, false);
    for (; n.nextNode(); )
      d(n.currentNode);
  });
}
function u(l2) {
  throw new Error("Unexpected object: " + l2);
}
var c = ((i2) => (i2[i2.First = 0] = "First", i2[i2.Previous = 1] = "Previous", i2[i2.Next = 2] = "Next", i2[i2.Last = 3] = "Last", i2[i2.Specific = 4] = "Specific", i2[i2.Nothing = 5] = "Nothing", i2))(c || {});
function f(l2, n) {
  let t2 = n.resolveItems();
  if (t2.length <= 0)
    return null;
  let r2 = n.resolveActiveIndex(), s2 = r2 != null ? r2 : -1;
  switch (l2.focus) {
    case 0: {
      for (let e = 0; e < t2.length; ++e)
        if (!n.resolveDisabled(t2[e], e, t2))
          return e;
      return r2;
    }
    case 1: {
      s2 === -1 && (s2 = t2.length);
      for (let e = s2 - 1; e >= 0; --e)
        if (!n.resolveDisabled(t2[e], e, t2))
          return e;
      return r2;
    }
    case 2: {
      for (let e = s2 + 1; e < t2.length; ++e)
        if (!n.resolveDisabled(t2[e], e, t2))
          return e;
      return r2;
    }
    case 3: {
      for (let e = t2.length - 1; e >= 0; --e)
        if (!n.resolveDisabled(t2[e], e, t2))
          return e;
      return r2;
    }
    case 4: {
      for (let e = 0; e < t2.length; ++e)
        if (n.resolveId(t2[e], e, t2) === l2.id)
          return e;
      return r2;
    }
    case 5:
      return null;
    default:
      u(l2);
  }
}
let a = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;
function o(e) {
  var r2, i2;
  let n = (r2 = e.innerText) != null ? r2 : "", t2 = e.cloneNode(true);
  if (!(t2 instanceof HTMLElement))
    return n;
  let u2 = false;
  for (let f2 of t2.querySelectorAll('[hidden],[aria-hidden],[role="img"]'))
    f2.remove(), u2 = true;
  let l2 = u2 ? (i2 = t2.innerText) != null ? i2 : "" : n;
  return a.test(l2) && (l2 = l2.replace(a, "")), l2;
}
function g(e) {
  let n = e.getAttribute("aria-label");
  if (typeof n == "string")
    return n.trim();
  let t2 = e.getAttribute("aria-labelledby");
  if (t2) {
    let u2 = t2.split(" ").map((l2) => {
      let r2 = (void 0).getElementById(l2);
      if (r2) {
        let i2 = r2.getAttribute("aria-label");
        return typeof i2 == "string" ? i2.trim() : o(r2).trim();
      }
      return null;
    }).filter(Boolean);
    if (u2.length > 0)
      return u2.join(", ");
  }
  return o(e).trim();
}
function p(a2) {
  let t2 = ref(""), r2 = ref("");
  return () => {
    let e = o$1(a2);
    if (!e)
      return "";
    let l2 = e.innerText;
    if (t2.value === l2)
      return r2.value;
    let u2 = g(e).trim().toLowerCase();
    return t2.value = l2, r2.value = u2, u2;
  };
}
var Z = ((o2) => (o2[o2.Open = 0] = "Open", o2[o2.Closed = 1] = "Closed", o2))(Z || {}), ee = ((o2) => (o2[o2.Pointer = 0] = "Pointer", o2[o2.Other = 1] = "Other", o2))(ee || {});
function te(i2) {
  requestAnimationFrame(() => requestAnimationFrame(i2));
}
let A = Symbol("MenuContext");
function O(i2) {
  let b = inject(A, null);
  if (b === null) {
    let o2 = new Error(`<${i2} /> is missing a parent <Menu /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o2, O), o2;
  }
  return b;
}
let ge = defineComponent({ name: "Menu", props: { as: { type: [Object, String], default: "template" } }, setup(i2, { slots: b, attrs: o2 }) {
  let I2 = ref(1), p2 = ref(null), e = ref(null), r2 = ref([]), f$1 = ref(""), d = ref(null), g2 = ref(1);
  function M(t2 = (a2) => a2) {
    let a2 = d.value !== null ? r2.value[d.value] : null, n = O$1(t2(r2.value.slice()), (v2) => o$1(v2.dataRef.domRef)), s2 = a2 ? n.indexOf(a2) : null;
    return s2 === -1 && (s2 = null), { items: n, activeItemIndex: s2 };
  }
  let l2 = { menuState: I2, buttonRef: p2, itemsRef: e, items: r2, searchQuery: f$1, activeItemIndex: d, activationTrigger: g2, closeMenu: () => {
    I2.value = 1, d.value = null;
  }, openMenu: () => I2.value = 0, goToItem(t2, a2, n) {
    let s2 = M(), v2 = f(t2 === c.Specific ? { focus: c.Specific, id: a2 } : { focus: t2 }, { resolveItems: () => s2.items, resolveActiveIndex: () => s2.activeItemIndex, resolveId: (u2) => u2.id, resolveDisabled: (u2) => u2.dataRef.disabled });
    f$1.value = "", d.value = v2, g2.value = n != null ? n : 1, r2.value = s2.items;
  }, search(t2) {
    let n = f$1.value !== "" ? 0 : 1;
    f$1.value += t2.toLowerCase();
    let v2 = (d.value !== null ? r2.value.slice(d.value + n).concat(r2.value.slice(0, d.value + n)) : r2.value).find((h2) => h2.dataRef.textValue.startsWith(f$1.value) && !h2.dataRef.disabled), u2 = v2 ? r2.value.indexOf(v2) : -1;
    u2 === -1 || u2 === d.value || (d.value = u2, g2.value = 1);
  }, clearSearch() {
    f$1.value = "";
  }, registerItem(t2, a2) {
    let n = M((s2) => [...s2, { id: t2, dataRef: a2 }]);
    r2.value = n.items, d.value = n.activeItemIndex, g2.value = 1;
  }, unregisterItem(t2) {
    let a2 = M((n) => {
      let s2 = n.findIndex((v2) => v2.id === t2);
      return s2 !== -1 && n.splice(s2, 1), n;
    });
    r2.value = a2.items, d.value = a2.activeItemIndex, g2.value = 1;
  } };
  return w([p2, e], (t2, a2) => {
    var n;
    l2.closeMenu(), w$2(a2, h.Loose) || (t2.preventDefault(), (n = o$1(p2)) == null || n.focus());
  }, computed(() => I2.value === 0)), provide(A, l2), t(computed(() => u$1$1(I2.value, { [0]: i$1.Open, [1]: i$1.Closed }))), () => {
    let t2 = { open: I2.value === 0, close: l2.closeMenu };
    return A$1({ ourProps: {}, theirProps: i2, slot: t2, slots: b, attrs: o2, name: "Menu" });
  };
} }), Se = defineComponent({ name: "MenuButton", props: { disabled: { type: Boolean, default: false }, as: { type: [Object, String], default: "button" }, id: { type: String, default: null } }, setup(i2, { attrs: b, slots: o2, expose: I$1$1 }) {
  var M;
  let p2 = (M = i2.id) != null ? M : `headlessui-menu-button-${I$1()}`, e = O("MenuButton");
  I$1$1({ el: e.buttonRef, $el: e.buttonRef });
  function r2(l2) {
    switch (l2.key) {
      case o$2.Space:
      case o$2.Enter:
      case o$2.ArrowDown:
        l2.preventDefault(), l2.stopPropagation(), e.openMenu(), nextTick(() => {
          var t2;
          (t2 = o$1(e.itemsRef)) == null || t2.focus({ preventScroll: true }), e.goToItem(c.First);
        });
        break;
      case o$2.ArrowUp:
        l2.preventDefault(), l2.stopPropagation(), e.openMenu(), nextTick(() => {
          var t2;
          (t2 = o$1(e.itemsRef)) == null || t2.focus({ preventScroll: true }), e.goToItem(c.Last);
        });
        break;
    }
  }
  function f2(l2) {
    switch (l2.key) {
      case o$2.Space:
        l2.preventDefault();
        break;
    }
  }
  function d(l2) {
    i2.disabled || (e.menuState.value === 0 ? (e.closeMenu(), nextTick(() => {
      var t2;
      return (t2 = o$1(e.buttonRef)) == null ? void 0 : t2.focus({ preventScroll: true });
    })) : (l2.preventDefault(), e.openMenu(), te(() => {
      var t2;
      return (t2 = o$1(e.itemsRef)) == null ? void 0 : t2.focus({ preventScroll: true });
    })));
  }
  let g2 = s(computed(() => ({ as: i2.as, type: b.type })), e.buttonRef);
  return () => {
    var n;
    let l2 = { open: e.menuState.value === 0 }, { ...t2 } = i2, a2 = { ref: e.buttonRef, id: p2, type: g2.value, "aria-haspopup": "menu", "aria-controls": (n = o$1(e.itemsRef)) == null ? void 0 : n.id, "aria-expanded": e.menuState.value === 0, onKeydown: r2, onKeyup: f2, onClick: d };
    return A$1({ ourProps: a2, theirProps: t2, slot: l2, attrs: b, slots: o2, name: "MenuButton" });
  };
} }), be = defineComponent({ name: "MenuItems", props: { as: { type: [Object, String], default: "div" }, static: { type: Boolean, default: false }, unmount: { type: Boolean, default: true }, id: { type: String, default: null } }, setup(i$12, { attrs: b, slots: o2, expose: I$1$1 }) {
  var l$12;
  let p2 = (l$12 = i$12.id) != null ? l$12 : `headlessui-menu-items-${I$1()}`, e = O("MenuItems"), r2 = ref(null);
  I$1$1({ el: e.itemsRef, $el: e.itemsRef }), i({ container: computed(() => o$1(e.itemsRef)), enabled: computed(() => e.menuState.value === 0), accept(t2) {
    return t2.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : t2.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(t2) {
    t2.setAttribute("role", "none");
  } });
  function f2(t2) {
    var a2;
    switch (r2.value && clearTimeout(r2.value), t2.key) {
      case o$2.Space:
        if (e.searchQuery.value !== "")
          return t2.preventDefault(), t2.stopPropagation(), e.search(t2.key);
      case o$2.Enter:
        if (t2.preventDefault(), t2.stopPropagation(), e.activeItemIndex.value !== null) {
          let s2 = e.items.value[e.activeItemIndex.value];
          (a2 = o$1(s2.dataRef.domRef)) == null || a2.click();
        }
        e.closeMenu(), _(o$1(e.buttonRef));
        break;
      case o$2.ArrowDown:
        return t2.preventDefault(), t2.stopPropagation(), e.goToItem(c.Next);
      case o$2.ArrowUp:
        return t2.preventDefault(), t2.stopPropagation(), e.goToItem(c.Previous);
      case o$2.Home:
      case o$2.PageUp:
        return t2.preventDefault(), t2.stopPropagation(), e.goToItem(c.First);
      case o$2.End:
      case o$2.PageDown:
        return t2.preventDefault(), t2.stopPropagation(), e.goToItem(c.Last);
      case o$2.Escape:
        t2.preventDefault(), t2.stopPropagation(), e.closeMenu(), nextTick(() => {
          var n;
          return (n = o$1(e.buttonRef)) == null ? void 0 : n.focus({ preventScroll: true });
        });
        break;
      case o$2.Tab:
        t2.preventDefault(), t2.stopPropagation(), e.closeMenu(), nextTick(() => v$1(o$1(e.buttonRef), t2.shiftKey ? N$1.Previous : N$1.Next));
        break;
      default:
        t2.key.length === 1 && (e.search(t2.key), r2.value = setTimeout(() => e.clearSearch(), 350));
        break;
    }
  }
  function d(t2) {
    switch (t2.key) {
      case o$2.Space:
        t2.preventDefault();
        break;
    }
  }
  let g2 = l(), M = computed(() => g2 !== null ? (g2.value & i$1.Open) === i$1.Open : e.menuState.value === 0);
  return () => {
    var s2, v2;
    let t2 = { open: e.menuState.value === 0 }, { ...a2 } = i$12, n = { "aria-activedescendant": e.activeItemIndex.value === null || (s2 = e.items.value[e.activeItemIndex.value]) == null ? void 0 : s2.id, "aria-labelledby": (v2 = o$1(e.buttonRef)) == null ? void 0 : v2.id, id: p2, onKeydown: f2, onKeyup: d, role: "menu", tabIndex: 0, ref: e.itemsRef };
    return A$1({ ourProps: n, theirProps: a2, slot: t2, attrs: b, slots: o2, features: N.RenderStrategy | N.Static, visible: M.value, name: "MenuItems" });
  };
} }), Me = defineComponent({ name: "MenuItem", inheritAttrs: false, props: { as: { type: [Object, String], default: "template" }, disabled: { type: Boolean, default: false }, id: { type: String, default: null } }, setup(i2, { slots: b, attrs: o2, expose: I$1$1 }) {
  var v2;
  let p$1 = (v2 = i2.id) != null ? v2 : `headlessui-menu-item-${I$1()}`, e = O("MenuItem"), r2 = ref(null);
  I$1$1({ el: r2, $el: r2 });
  let f2 = computed(() => e.activeItemIndex.value !== null ? e.items.value[e.activeItemIndex.value].id === p$1 : false), d = p(r2), g2 = computed(() => ({ disabled: i2.disabled, get textValue() {
    return d();
  }, domRef: r2 }));
  onMounted(() => e.registerItem(p$1, g2)), onUnmounted(() => e.unregisterItem(p$1)), watchEffect(() => {
    e.menuState.value === 0 && f2.value && e.activationTrigger.value !== 0 && nextTick(() => {
      var u2, h2;
      return (h2 = (u2 = o$1(r2)) == null ? void 0 : u2.scrollIntoView) == null ? void 0 : h2.call(u2, { block: "nearest" });
    });
  });
  function M(u2) {
    if (i2.disabled)
      return u2.preventDefault();
    e.closeMenu(), _(o$1(e.buttonRef));
  }
  function l2() {
    if (i2.disabled)
      return e.goToItem(c.Nothing);
    e.goToItem(c.Specific, p$1);
  }
  let t2 = u$1();
  function a2(u2) {
    t2.update(u2);
  }
  function n(u2) {
    t2.wasMoved(u2) && (i2.disabled || f2.value || e.goToItem(c.Specific, p$1, 0));
  }
  function s2(u2) {
    t2.wasMoved(u2) && (i2.disabled || f2.value && e.goToItem(c.Nothing));
  }
  return () => {
    let { disabled: u2 } = i2, h2 = { active: f2.value, disabled: u2, close: e.closeMenu }, { ...C } = i2;
    return A$1({ ourProps: { id: p$1, ref: r2, role: "menuitem", tabIndex: u2 === true ? void 0 : -1, "aria-disabled": u2 === true ? true : void 0, disabled: void 0, onClick: M, onFocus: l2, onPointerenter: a2, onMouseenter: a2, onPointermove: n, onMousemove: n, onPointerleave: s2, onMouseleave: s2 }, theirProps: { ...o2, ...C }, slot: h2, attrs: o2, slots: b, name: "MenuItem" });
  };
} });
function getWindow(node) {
  if (node == null) {
    return void 0;
  }
  if (node.toString() !== "[object Window]") {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || void 0 : void 0;
  }
  return node;
}
function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
var max = Math.max;
var min = Math.min;
var round = Math.round;
function getUAString() {
  var uaData = (void 0).userAgentData;
  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function(item) {
      return item.brand + "/" + item.version;
    }).join(" ");
  }
  return (void 0).userAgent;
}
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  var _ref = isElement(element) ? getWindow(element) : void 0, visualViewport = _ref.visualViewport;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width,
    height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x,
    y
  };
}
function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}
function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}
function getDocumentElement(element) {
  return ((isElement(element) ? element.ownerDocument : (
    // $FlowFixMe[prop-missing]
    element.document
  )) || (void 0).document).documentElement;
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}
function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width,
    height
  };
}
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || // DOM Element detected
    (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element)
  );
}
function getScrollParent(node) {
  if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }
  return getScrollParent(getParentNode(node));
}
function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    updatedList.concat(listScrollParents(getParentNode(target)))
  );
}
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());
  if (isIE && isHTMLElement(element)) {
    var elementCss = getComputedStyle(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle(currentNode);
    if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle(offsetParent).position === "static")) {
    return window;
  }
  return offsetParent || getContainingBlock(element) || window;
}
var top = "top";
var bottom = "bottom";
var right = "right";
var left = "left";
var auto = "auto";
var basePlacements = [top, bottom, right, left];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
function order(modifiers) {
  var map = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  var orderedModifiers = order(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}
function debounce(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}
function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x + getWindowScrollBarX(element),
    y
  };
}
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;
  if (getComputedStyle(body || html).direction === "rtl") {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;
    do {
      if (next && parent.isSameNode(next)) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === "fixed");
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}
function getBasePlacement(placement) {
  return placement.split("-")[0];
}
function getVariation(placement) {
  return placement.split("-")[1];
}
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}
function computeOffsets(_ref) {
  var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
        break;
    }
  }
  return offsets;
}
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}
function expandToHashMap(value, keys) {
  return keys.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}
function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset2 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset2[axis] * multiply;
    });
  }
  return overflowOffsets;
}
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers2 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference2, popper2, options) {
    if (options === void 0) {
      options = defaultOptions;
    }
    var state = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state,
      setOptions: function setOptions(setOptionsAction) {
        var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options2);
        state.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers2, state.options.modifiers)));
        state.orderedModifiers = orderedModifiers.filter(function(m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          return;
        }
        state.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state.reset = false;
        state.placement = state.options.placement;
        state.orderedModifiers.forEach(function(modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state = fn2({
              state,
              options: _options,
              name,
              instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference2, popper2)) {
      return instance;
    }
    instance.setOptions(options).then(function(state2) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state2);
      }
    });
    function runModifierEffects() {
      state.orderedModifiers.forEach(function(_ref) {
        var name = _ref.name, _ref$options = _ref.options, options2 = _ref$options === void 0 ? {} : _ref$options, effect2 = _ref.effect;
        if (typeof effect2 === "function") {
          var cleanupFn = effect2({
            state,
            name,
            instance,
            options: options2
          });
          var noopFn = function noopFn2() {
          };
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}
var passive = {
  passive: true
};
function effect$2(_ref) {
  var state = _ref.state, instance = _ref.instance, options = _ref.options;
  var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window.removeEventListener("resize", instance.update, passive);
    }
  };
}
const eventListeners = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function fn() {
  },
  effect: effect$2,
  data: {}
};
function popperOffsets(_ref) {
  var state = _ref.state, name = _ref.name;
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: "absolute",
    placement: state.placement
  });
}
const popperOffsets$1 = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x, y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win = void 0;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle(offsetParent).position !== "static" && position === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        offsetParent[heightProp]
      );
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        offsetParent[widthProp]
      );
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x,
    y
  }, getWindow(popper2)) : {
    x,
    y
  };
  x = _ref4.x;
  y = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
function computeStyles(_ref5) {
  var state = _ref5.state, options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration,
    isFixed: state.options.strategy === "fixed"
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-placement": state.placement
  });
}
const computeStyles$1 = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};
function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function(name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name];
    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
function effect$1(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state.elements).forEach(function(name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property) {
        style2[property] = "";
        return style2;
      }, {});
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
const applyStyles$1 = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect: effect$1,
  requires: ["computeStyles"]
};
var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1];
var hash$1 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash$1[matched];
  });
}
var hash = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash[matched];
  });
}
function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements$1.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements$1;
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a2, b) {
    return overflows[a2] - overflows[b];
  });
}
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements2[0];
  for (var i2 = 0; i2 < placements2.length; i2++) {
    var placement = placements2[i2];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow = detectOverflow(state, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop2(_i2) {
      var fittingPlacement = placements2.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
}
const flip$1 = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};
function distanceAndSkiddingToXY(placement, rects, offset2) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
    placement
  })) : offset2, skidding = _ref[0], distance = _ref[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
function offset(_ref2) {
  var state = _ref2.state, options = _ref2.options, name = _ref2.name;
  var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }
  state.modifiersData[name] = data;
}
const offset$1 = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}
function withinMaxClamp(min2, value, max2) {
  var v2 = within(min2, value, max2);
  return v2 > max2 ? max2 : v2;
}
function preventOverflow(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len = mainAxis === "y" ? "height" : "width";
    var offset2 = popperOffsets2[mainAxis];
    var min$1 = offset2 + overflow[mainSide];
    var max$1 = offset2 - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset2 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset2, tether ? max(max$1, tetherMax) : max$1);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset2;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
}
const preventOverflow$1 = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};
var toPaddingObject = function toPaddingObject2(padding, state) {
  padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
};
function arrow(_ref) {
  var _state$modifiersData$;
  var state = _ref.state, name = _ref.name, options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min2 = paddingObject[minProp];
  var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset2 = within(min2, center, max2);
  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
}
function effect(_ref2) {
  var state = _ref2.state, options = _ref2.options;
  var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }
  state.elements.arrow = arrowElement;
}
const arrowModifier = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
popperGenerator({
  defaultModifiers: [...defaultModifiers, offset$1, flip$1, preventOverflow$1, computeStyles$1, eventListeners, arrowModifier]
});
function usePopper({
  locked = false,
  overflowPadding = 8,
  offsetDistance = 8,
  offsetSkid = 0,
  gpuAcceleration = true,
  adaptive = true,
  scroll = true,
  resize = true,
  arrow: arrow2 = false,
  placement,
  strategy
}, virtualReference) {
  const reference2 = ref(null);
  const popper2 = ref(null);
  const instance = ref(null);
  return [reference2, popper2, instance];
}
const config = mergeConfig(appConfig.ui.strategy, appConfig.ui.dropdown, dropdown);
const _sfc_main$3 = defineComponent({
  components: {
    HMenu: ge,
    HMenuButton: Se,
    HMenuItems: be,
    HMenuItem: Me,
    UIcon: __nuxt_component_4,
    UAvatar: __nuxt_component_2,
    UKbd: __nuxt_component_3
  },
  inheritAttrs: false,
  props: {
    items: {
      type: Array,
      default: () => []
    },
    mode: {
      type: String,
      default: "click",
      validator: (value) => ["click", "hover"].includes(value)
    },
    open: {
      type: Boolean,
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: false
    },
    popper: {
      type: Object,
      default: () => ({})
    },
    openDelay: {
      type: Number,
      default: () => config.default.openDelay
    },
    closeDelay: {
      type: Number,
      default: () => config.default.closeDelay
    },
    class: {
      type: [String, Object, Array],
      default: () => ""
    },
    ui: {
      type: Object,
      default: () => ({})
    }
  },
  emits: ["update:open"],
  setup(props, { emit }) {
    const { ui, attrs } = useUI("dropdown", toRef(props, "ui"), config, toRef(props, "class"));
    const popper2 = computed(() => defu(props.mode === "hover" ? { offsetDistance: 0 } : {}, props.popper, ui.value.popper));
    const [trigger, container] = usePopper(popper2.value);
    const menuApi = ref(null);
    let openTimeout = null;
    let closeTimeout = null;
    const containerStyle = computed(() => {
      var _a, _b, _c;
      if (props.mode !== "hover") {
        return {};
      }
      const offsetDistance = ((_a = props.popper) == null ? void 0 : _a.offsetDistance) || ((_b = ui.value.popper) == null ? void 0 : _b.offsetDistance) || 8;
      const placement = (_c = popper2.value.placement) == null ? void 0 : _c.split("-")[0];
      const padding = `${offsetDistance}px`;
      if (placement === "top" || placement === "bottom") {
        return {
          paddingTop: padding,
          paddingBottom: padding
        };
      } else if (placement === "left" || placement === "right") {
        return {
          paddingLeft: padding,
          paddingRight: padding
        };
      } else {
        return {
          paddingTop: padding,
          paddingBottom: padding,
          paddingLeft: padding,
          paddingRight: padding
        };
      }
    });
    function onTouchStart() {
      if (!menuApi.value) {
        return;
      }
      if (menuApi.value.menuState === 0) {
        menuApi.value.closeMenu();
      } else {
        menuApi.value.openMenu();
      }
    }
    function onMouseEnter() {
      if (props.mode !== "hover" || !menuApi.value) {
        return;
      }
      if (closeTimeout) {
        clearTimeout(closeTimeout);
        closeTimeout = null;
      }
      if (menuApi.value.menuState === 0) {
        return;
      }
      openTimeout = openTimeout || setTimeout(() => {
        menuApi.value.openMenu && menuApi.value.openMenu();
        openTimeout = null;
      }, props.openDelay);
    }
    function onMouseLeave() {
      if (props.mode !== "hover" || !menuApi.value) {
        return;
      }
      if (openTimeout) {
        clearTimeout(openTimeout);
        openTimeout = null;
      }
      if (menuApi.value.menuState === 1) {
        return;
      }
      closeTimeout = closeTimeout || setTimeout(() => {
        menuApi.value.closeMenu && menuApi.value.closeMenu();
        closeTimeout = null;
      }, props.closeDelay);
    }
    function onClick(e, item, { href, navigate, close, isExternal }) {
      if (item.click) {
        item.click(e);
      }
      if (href && !isExternal) {
        navigate(e);
        close();
      }
    }
    watch(() => props.open, (newValue, oldValue) => {
      if (!menuApi.value)
        return;
      if (oldValue === void 0 || newValue === oldValue)
        return;
      if (newValue) {
        menuApi.value.openMenu();
      } else {
        menuApi.value.closeMenu();
      }
    });
    watch(() => {
      var _a;
      return (_a = menuApi.value) == null ? void 0 : _a.menuState;
    }, (newValue, oldValue) => {
      if (oldValue === void 0 || newValue === oldValue)
        return;
      emit("update:open", newValue === 0);
    });
    const NuxtLink = __nuxt_component_0$2;
    l$1(() => useId("$ctlRmIk4j0"));
    return {
      // eslint-disable-next-line vue/no-dupe-keys
      ui,
      attrs,
      // eslint-disable-next-line vue/no-dupe-keys
      popper: popper2,
      trigger,
      container,
      containerStyle,
      onTouchStart,
      onMouseEnter,
      onMouseLeave,
      onClick,
      getNuxtLinkProps,
      twMerge,
      twJoin,
      NuxtLink
    };
  }
});
function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_HMenu = resolveComponent("HMenu");
  const _component_HMenuButton = resolveComponent("HMenuButton");
  const _component_HMenuItems = resolveComponent("HMenuItems");
  const _component_NuxtLink = __nuxt_component_0$2;
  const _component_HMenuItem = resolveComponent("HMenuItem");
  const _component_UIcon = __nuxt_component_4;
  const _component_UAvatar = __nuxt_component_2;
  const _component_UKbd = __nuxt_component_3;
  _push(ssrRenderComponent(_component_HMenu, mergeProps({
    as: "div",
    class: _ctx.ui.wrapper
  }, _ctx.attrs, { onMouseleave: _ctx.onMouseLeave }, _attrs), {
    default: withCtx(({ open }, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_HMenuButton, {
          ref: "trigger",
          as: "div",
          disabled: _ctx.disabled,
          class: _ctx.ui.trigger,
          role: "button",
          onMouseenter: _ctx.onMouseEnter,
          onTouchstart: _ctx.onTouchStart
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              ssrRenderSlot(_ctx.$slots, "default", {
                open,
                disabled: _ctx.disabled
              }, () => {
                _push3(`<button${ssrIncludeBooleanAttr(_ctx.disabled) ? " disabled" : ""}${_scopeId2}> Open </button>`);
              }, _push3, _parent3, _scopeId2);
            } else {
              return [
                renderSlot(_ctx.$slots, "default", {
                  open,
                  disabled: _ctx.disabled
                }, () => [
                  createVNode("button", { disabled: _ctx.disabled }, " Open ", 8, ["disabled"])
                ])
              ];
            }
          }),
          _: 2
        }, _parent2, _scopeId));
        if (open && _ctx.items.length) {
          _push2(`<div class="${ssrRenderClass([_ctx.ui.container, _ctx.ui.width])}" style="${ssrRenderStyle(_ctx.containerStyle)}"${_scopeId}><template><div${_scopeId}>`);
          if (_ctx.popper.arrow) {
            _push2(`<div data-popper-arrow class="${ssrRenderClass(Object.values(_ctx.ui.arrow))}"${_scopeId}></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(ssrRenderComponent(_component_HMenuItems, {
            class: [_ctx.ui.base, _ctx.ui.divide, _ctx.ui.ring, _ctx.ui.rounded, _ctx.ui.shadow, _ctx.ui.background, _ctx.ui.height],
            static: ""
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<!--[-->`);
                ssrRenderList(_ctx.items, (subItems, index) => {
                  _push3(`<div class="${ssrRenderClass(_ctx.ui.padding)}"${_scopeId2}><!--[-->`);
                  ssrRenderList(subItems, (item, subIndex) => {
                    _push3(ssrRenderComponent(_component_NuxtLink, mergeProps({ key: subIndex }, _ctx.getNuxtLinkProps(item), { custom: "" }), {
                      default: withCtx(({ href, target, rel, navigate, isExternal, isActive }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_HMenuItem, {
                            disabled: item.disabled
                          }, {
                            default: withCtx(({ active, disabled: itemDisabled, close }, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                ssrRenderVNode(_push5, createVNode(resolveDynamicComponent(!!href ? "a" : "button"), {
                                  href: !itemDisabled ? href : void 0,
                                  rel,
                                  target,
                                  class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.base, _ctx.ui.item.padding, _ctx.ui.item.size, _ctx.ui.item.rounded, active || isActive ? _ctx.ui.item.active : _ctx.ui.item.inactive, itemDisabled && _ctx.ui.item.disabled), item.class),
                                  onClick: ($event) => _ctx.onClick($event, item, { href, navigate, close, isExternal })
                                }, {
                                  default: withCtx((_3, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      ssrRenderSlot(_ctx.$slots, item.slot || "item", { item }, () => {
                                        var _a;
                                        if (item.icon) {
                                          _push6(ssrRenderComponent(_component_UIcon, {
                                            name: item.icon,
                                            class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.icon.base, active || isActive ? _ctx.ui.item.icon.active : _ctx.ui.item.icon.inactive), item.iconClass)
                                          }, null, _parent6, _scopeId5));
                                        } else if (item.avatar) {
                                          _push6(ssrRenderComponent(_component_UAvatar, mergeProps({ size: _ctx.ui.item.avatar.size, ...item.avatar }, {
                                            class: _ctx.ui.item.avatar.base
                                          }), null, _parent6, _scopeId5));
                                        } else {
                                          _push6(`<!---->`);
                                        }
                                        _push6(`<span class="${ssrRenderClass(_ctx.twMerge(_ctx.ui.item.label, item.labelClass))}"${_scopeId5}>${ssrInterpolate(item.label)}</span>`);
                                        if ((_a = item.shortcuts) == null ? void 0 : _a.length) {
                                          _push6(`<span class="${ssrRenderClass(_ctx.ui.item.shortcuts)}"${_scopeId5}><!--[-->`);
                                          ssrRenderList(item.shortcuts, (shortcut) => {
                                            _push6(ssrRenderComponent(_component_UKbd, { key: shortcut }, {
                                              default: withCtx((_4, _push7, _parent7, _scopeId6) => {
                                                if (_push7) {
                                                  _push7(`${ssrInterpolate(shortcut)}`);
                                                } else {
                                                  return [
                                                    createTextVNode(toDisplayString(shortcut), 1)
                                                  ];
                                                }
                                              }),
                                              _: 2
                                            }, _parent6, _scopeId5));
                                          });
                                          _push6(`<!--]--></span>`);
                                        } else {
                                          _push6(`<!---->`);
                                        }
                                      }, _push6, _parent6, _scopeId5);
                                    } else {
                                      return [
                                        renderSlot(_ctx.$slots, item.slot || "item", { item }, () => {
                                          var _a;
                                          return [
                                            item.icon ? (openBlock(), createBlock(_component_UIcon, {
                                              key: 0,
                                              name: item.icon,
                                              class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.icon.base, active || isActive ? _ctx.ui.item.icon.active : _ctx.ui.item.icon.inactive), item.iconClass)
                                            }, null, 8, ["name", "class"])) : item.avatar ? (openBlock(), createBlock(_component_UAvatar, mergeProps({ key: 1 }, { size: _ctx.ui.item.avatar.size, ...item.avatar }, {
                                              class: _ctx.ui.item.avatar.base
                                            }), null, 16, ["class"])) : createCommentVNode("", true),
                                            createVNode("span", {
                                              class: _ctx.twMerge(_ctx.ui.item.label, item.labelClass)
                                            }, toDisplayString(item.label), 3),
                                            ((_a = item.shortcuts) == null ? void 0 : _a.length) ? (openBlock(), createBlock("span", {
                                              key: 2,
                                              class: _ctx.ui.item.shortcuts
                                            }, [
                                              (openBlock(true), createBlock(Fragment, null, renderList(item.shortcuts, (shortcut) => {
                                                return openBlock(), createBlock(_component_UKbd, { key: shortcut }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(shortcut), 1)
                                                  ]),
                                                  _: 2
                                                }, 1024);
                                              }), 128))
                                            ], 2)) : createCommentVNode("", true)
                                          ];
                                        })
                                      ];
                                    }
                                  }),
                                  _: 2
                                }), _parent5, _scopeId4);
                              } else {
                                return [
                                  (openBlock(), createBlock(resolveDynamicComponent(!!href ? "a" : "button"), {
                                    href: !itemDisabled ? href : void 0,
                                    rel,
                                    target,
                                    class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.base, _ctx.ui.item.padding, _ctx.ui.item.size, _ctx.ui.item.rounded, active || isActive ? _ctx.ui.item.active : _ctx.ui.item.inactive, itemDisabled && _ctx.ui.item.disabled), item.class),
                                    onClick: ($event) => _ctx.onClick($event, item, { href, navigate, close, isExternal })
                                  }, {
                                    default: withCtx(() => [
                                      renderSlot(_ctx.$slots, item.slot || "item", { item }, () => {
                                        var _a;
                                        return [
                                          item.icon ? (openBlock(), createBlock(_component_UIcon, {
                                            key: 0,
                                            name: item.icon,
                                            class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.icon.base, active || isActive ? _ctx.ui.item.icon.active : _ctx.ui.item.icon.inactive), item.iconClass)
                                          }, null, 8, ["name", "class"])) : item.avatar ? (openBlock(), createBlock(_component_UAvatar, mergeProps({ key: 1 }, { size: _ctx.ui.item.avatar.size, ...item.avatar }, {
                                            class: _ctx.ui.item.avatar.base
                                          }), null, 16, ["class"])) : createCommentVNode("", true),
                                          createVNode("span", {
                                            class: _ctx.twMerge(_ctx.ui.item.label, item.labelClass)
                                          }, toDisplayString(item.label), 3),
                                          ((_a = item.shortcuts) == null ? void 0 : _a.length) ? (openBlock(), createBlock("span", {
                                            key: 2,
                                            class: _ctx.ui.item.shortcuts
                                          }, [
                                            (openBlock(true), createBlock(Fragment, null, renderList(item.shortcuts, (shortcut) => {
                                              return openBlock(), createBlock(_component_UKbd, { key: shortcut }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(shortcut), 1)
                                                ]),
                                                _: 2
                                              }, 1024);
                                            }), 128))
                                          ], 2)) : createCommentVNode("", true)
                                        ];
                                      })
                                    ]),
                                    _: 2
                                  }, 1032, ["href", "rel", "target", "class", "onClick"]))
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_HMenuItem, {
                              disabled: item.disabled
                            }, {
                              default: withCtx(({ active, disabled: itemDisabled, close }) => [
                                (openBlock(), createBlock(resolveDynamicComponent(!!href ? "a" : "button"), {
                                  href: !itemDisabled ? href : void 0,
                                  rel,
                                  target,
                                  class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.base, _ctx.ui.item.padding, _ctx.ui.item.size, _ctx.ui.item.rounded, active || isActive ? _ctx.ui.item.active : _ctx.ui.item.inactive, itemDisabled && _ctx.ui.item.disabled), item.class),
                                  onClick: ($event) => _ctx.onClick($event, item, { href, navigate, close, isExternal })
                                }, {
                                  default: withCtx(() => [
                                    renderSlot(_ctx.$slots, item.slot || "item", { item }, () => {
                                      var _a;
                                      return [
                                        item.icon ? (openBlock(), createBlock(_component_UIcon, {
                                          key: 0,
                                          name: item.icon,
                                          class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.icon.base, active || isActive ? _ctx.ui.item.icon.active : _ctx.ui.item.icon.inactive), item.iconClass)
                                        }, null, 8, ["name", "class"])) : item.avatar ? (openBlock(), createBlock(_component_UAvatar, mergeProps({ key: 1 }, { size: _ctx.ui.item.avatar.size, ...item.avatar }, {
                                          class: _ctx.ui.item.avatar.base
                                        }), null, 16, ["class"])) : createCommentVNode("", true),
                                        createVNode("span", {
                                          class: _ctx.twMerge(_ctx.ui.item.label, item.labelClass)
                                        }, toDisplayString(item.label), 3),
                                        ((_a = item.shortcuts) == null ? void 0 : _a.length) ? (openBlock(), createBlock("span", {
                                          key: 2,
                                          class: _ctx.ui.item.shortcuts
                                        }, [
                                          (openBlock(true), createBlock(Fragment, null, renderList(item.shortcuts, (shortcut) => {
                                            return openBlock(), createBlock(_component_UKbd, { key: shortcut }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(shortcut), 1)
                                              ]),
                                              _: 2
                                            }, 1024);
                                          }), 128))
                                        ], 2)) : createCommentVNode("", true)
                                      ];
                                    })
                                  ]),
                                  _: 2
                                }, 1032, ["href", "rel", "target", "class", "onClick"]))
                              ]),
                              _: 2
                            }, 1032, ["disabled"])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  });
                  _push3(`<!--]--></div>`);
                });
                _push3(`<!--]-->`);
              } else {
                return [
                  (openBlock(true), createBlock(Fragment, null, renderList(_ctx.items, (subItems, index) => {
                    return openBlock(), createBlock("div", {
                      key: index,
                      class: _ctx.ui.padding
                    }, [
                      (openBlock(true), createBlock(Fragment, null, renderList(subItems, (item, subIndex) => {
                        return openBlock(), createBlock(_component_NuxtLink, mergeProps({ key: subIndex }, _ctx.getNuxtLinkProps(item), { custom: "" }), {
                          default: withCtx(({ href, target, rel, navigate, isExternal, isActive }) => [
                            createVNode(_component_HMenuItem, {
                              disabled: item.disabled
                            }, {
                              default: withCtx(({ active, disabled: itemDisabled, close }) => [
                                (openBlock(), createBlock(resolveDynamicComponent(!!href ? "a" : "button"), {
                                  href: !itemDisabled ? href : void 0,
                                  rel,
                                  target,
                                  class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.base, _ctx.ui.item.padding, _ctx.ui.item.size, _ctx.ui.item.rounded, active || isActive ? _ctx.ui.item.active : _ctx.ui.item.inactive, itemDisabled && _ctx.ui.item.disabled), item.class),
                                  onClick: ($event) => _ctx.onClick($event, item, { href, navigate, close, isExternal })
                                }, {
                                  default: withCtx(() => [
                                    renderSlot(_ctx.$slots, item.slot || "item", { item }, () => {
                                      var _a;
                                      return [
                                        item.icon ? (openBlock(), createBlock(_component_UIcon, {
                                          key: 0,
                                          name: item.icon,
                                          class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.icon.base, active || isActive ? _ctx.ui.item.icon.active : _ctx.ui.item.icon.inactive), item.iconClass)
                                        }, null, 8, ["name", "class"])) : item.avatar ? (openBlock(), createBlock(_component_UAvatar, mergeProps({ key: 1 }, { size: _ctx.ui.item.avatar.size, ...item.avatar }, {
                                          class: _ctx.ui.item.avatar.base
                                        }), null, 16, ["class"])) : createCommentVNode("", true),
                                        createVNode("span", {
                                          class: _ctx.twMerge(_ctx.ui.item.label, item.labelClass)
                                        }, toDisplayString(item.label), 3),
                                        ((_a = item.shortcuts) == null ? void 0 : _a.length) ? (openBlock(), createBlock("span", {
                                          key: 2,
                                          class: _ctx.ui.item.shortcuts
                                        }, [
                                          (openBlock(true), createBlock(Fragment, null, renderList(item.shortcuts, (shortcut) => {
                                            return openBlock(), createBlock(_component_UKbd, { key: shortcut }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(shortcut), 1)
                                              ]),
                                              _: 2
                                            }, 1024);
                                          }), 128))
                                        ], 2)) : createCommentVNode("", true)
                                      ];
                                    })
                                  ]),
                                  _: 2
                                }, 1032, ["href", "rel", "target", "class", "onClick"]))
                              ]),
                              _: 2
                            }, 1032, ["disabled"])
                          ]),
                          _: 2
                        }, 1040);
                      }), 128))
                    ], 2);
                  }), 128))
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</div></template></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          createVNode(_component_HMenuButton, {
            ref: "trigger",
            as: "div",
            disabled: _ctx.disabled,
            class: _ctx.ui.trigger,
            role: "button",
            onMouseenter: _ctx.onMouseEnter,
            onTouchstartPassive: _ctx.onTouchStart
          }, {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "default", {
                open,
                disabled: _ctx.disabled
              }, () => [
                createVNode("button", { disabled: _ctx.disabled }, " Open ", 8, ["disabled"])
              ])
            ]),
            _: 2
          }, 1032, ["disabled", "class", "onMouseenter", "onTouchstartPassive"]),
          open && _ctx.items.length ? (openBlock(), createBlock("div", {
            key: 0,
            ref: "container",
            class: [_ctx.ui.container, _ctx.ui.width],
            style: _ctx.containerStyle
          }, [
            createVNode(Transition, mergeProps({ appear: "" }, _ctx.ui.transition), {
              default: withCtx(() => [
                createVNode("div", null, [
                  _ctx.popper.arrow ? (openBlock(), createBlock("div", {
                    key: 0,
                    "data-popper-arrow": "",
                    class: Object.values(_ctx.ui.arrow)
                  }, null, 2)) : createCommentVNode("", true),
                  createVNode(_component_HMenuItems, {
                    class: [_ctx.ui.base, _ctx.ui.divide, _ctx.ui.ring, _ctx.ui.rounded, _ctx.ui.shadow, _ctx.ui.background, _ctx.ui.height],
                    static: ""
                  }, {
                    default: withCtx(() => [
                      (openBlock(true), createBlock(Fragment, null, renderList(_ctx.items, (subItems, index) => {
                        return openBlock(), createBlock("div", {
                          key: index,
                          class: _ctx.ui.padding
                        }, [
                          (openBlock(true), createBlock(Fragment, null, renderList(subItems, (item, subIndex) => {
                            return openBlock(), createBlock(_component_NuxtLink, mergeProps({ key: subIndex }, _ctx.getNuxtLinkProps(item), { custom: "" }), {
                              default: withCtx(({ href, target, rel, navigate, isExternal, isActive }) => [
                                createVNode(_component_HMenuItem, {
                                  disabled: item.disabled
                                }, {
                                  default: withCtx(({ active, disabled: itemDisabled, close }) => [
                                    (openBlock(), createBlock(resolveDynamicComponent(!!href ? "a" : "button"), {
                                      href: !itemDisabled ? href : void 0,
                                      rel,
                                      target,
                                      class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.base, _ctx.ui.item.padding, _ctx.ui.item.size, _ctx.ui.item.rounded, active || isActive ? _ctx.ui.item.active : _ctx.ui.item.inactive, itemDisabled && _ctx.ui.item.disabled), item.class),
                                      onClick: ($event) => _ctx.onClick($event, item, { href, navigate, close, isExternal })
                                    }, {
                                      default: withCtx(() => [
                                        renderSlot(_ctx.$slots, item.slot || "item", { item }, () => {
                                          var _a;
                                          return [
                                            item.icon ? (openBlock(), createBlock(_component_UIcon, {
                                              key: 0,
                                              name: item.icon,
                                              class: _ctx.twMerge(_ctx.twJoin(_ctx.ui.item.icon.base, active || isActive ? _ctx.ui.item.icon.active : _ctx.ui.item.icon.inactive), item.iconClass)
                                            }, null, 8, ["name", "class"])) : item.avatar ? (openBlock(), createBlock(_component_UAvatar, mergeProps({ key: 1 }, { size: _ctx.ui.item.avatar.size, ...item.avatar }, {
                                              class: _ctx.ui.item.avatar.base
                                            }), null, 16, ["class"])) : createCommentVNode("", true),
                                            createVNode("span", {
                                              class: _ctx.twMerge(_ctx.ui.item.label, item.labelClass)
                                            }, toDisplayString(item.label), 3),
                                            ((_a = item.shortcuts) == null ? void 0 : _a.length) ? (openBlock(), createBlock("span", {
                                              key: 2,
                                              class: _ctx.ui.item.shortcuts
                                            }, [
                                              (openBlock(true), createBlock(Fragment, null, renderList(item.shortcuts, (shortcut) => {
                                                return openBlock(), createBlock(_component_UKbd, { key: shortcut }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(shortcut), 1)
                                                  ]),
                                                  _: 2
                                                }, 1024);
                                              }), 128))
                                            ], 2)) : createCommentVNode("", true)
                                          ];
                                        })
                                      ]),
                                      _: 2
                                    }, 1032, ["href", "rel", "target", "class", "onClick"]))
                                  ]),
                                  _: 2
                                }, 1032, ["disabled"])
                              ]),
                              _: 2
                            }, 1040);
                          }), 128))
                        ], 2);
                      }), 128))
                    ]),
                    _: 3
                  }, 8, ["class"])
                ])
              ]),
              _: 3
            }, 16)
          ], 6)) : createCommentVNode("", true)
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/@nuxt/ui/dist/runtime/components/elements/Dropdown.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
const __nuxt_component_0$1 = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["ssrRender", _sfc_ssrRender$1]]);
const _sfc_main$2 = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<svg${ssrRenderAttrs(mergeProps({
    width: "21",
    height: "21",
    viewBox: "0 0 21 21",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _attrs))}><path d="M6.125 13.125L10.5 17.5L14.875 13.125M6.125 7.875L10.5 3.5L14.875 7.875" stroke="#B2B5EF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg>`);
}
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/home/icons/icon-userProfile-chevron.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
const __nuxt_component_1 = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["ssrRender", _sfc_ssrRender]]);
const _sfc_main$1 = /* @__PURE__ */ defineComponent({
  __name: "menu-user-profile",
  __ssrInlineRender: true,
  props: {
    displayName: {},
    email: {},
    notification: {}
  },
  setup(__props) {
    const props = __props;
    const displayNameFirstLetter = computed(() => {
      var _a;
      return (_a = props.displayName) == null ? void 0 : _a.charAt(0);
    });
    const items = [
      [
        {
          label: "User menu",
          icon: "i-heroicons-user-circle",
          to: "/user-profile"
        },
        {
          label: "Sign out",
          icon: "i-heroicons-arrow-left-on-rectangle"
        }
      ],
      [
        {
          label: "Mange Admin",
          icon: "i-heroicons-cog-8-tooth"
        }
      ]
    ];
    const uiDropdown = (
      /* ui */
      {
        width: "w-[175px]",
        ring: "ring-1 ring-primaryBlue-200",
        background: "bg-primaryBlue-100",
        item: {
          active: "bg-primaryBlue-200 text-black"
        },
        popper: {
          placement: "bottom-start"
        },
        divide: "divide-primaryBlue-200"
      }
    );
    return (_ctx, _push, _parent, _attrs) => {
      const _component_UDropdown = __nuxt_component_0$1;
      const _component_IconUserProfileChevron = __nuxt_component_1;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex items-center gap-2 rounded-2xl bg-primaryBlue-200 p-2" }, _attrs))}><div class="relative flex h-10 w-10 items-center justify-center rounded-lg bg-primaryBlue-500 text-2xl font-bold text-primaryBlue-50">${ssrInterpolate(unref(displayNameFirstLetter))} <div class="absolute -bottom-1 -right-1 flex items-center justify-center rounded-[3px] bg-green-500 px-[4px] text-xs font-bold leading-4 text-white">${ssrInterpolate(_ctx.notification)}</div></div><div class="flex max-w-[126px] flex-col"><p class="truncate text-base font-medium text-primaryBlue-600">${ssrInterpolate(_ctx.displayName)}</p><p class="truncate text-xs text-primaryBlue-500">${ssrInterpolate(_ctx.email)}</p></div>`);
      _push(ssrRenderComponent(_component_UDropdown, {
        items,
        ui: uiDropdown
      }, {
        default: withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button${_scopeId}>`);
            _push2(ssrRenderComponent(_component_IconUserProfileChevron, null, null, _parent2, _scopeId));
            _push2(`</button>`);
          } else {
            return [
              createVNode("button", null, [
                createVNode(_component_IconUserProfileChevron)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/base-layout/menu-user-profile.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const _sfc_main = {
  __name: "base-layout",
  __ssrInlineRender: true,
  setup(__props) {
    let showSidebar = ref(false);
    ref(null);
    ref(null);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_UIcon = __nuxt_component_4;
      const _component_NuxtLink = __nuxt_component_0$2;
      const _component_IconLogo = __nuxt_component_2$1;
      const _component_MenuUserProfile = _sfc_main$1;
      _push(`<main${ssrRenderAttrs(mergeProps({ class: "flex h-screen w-screen" }, _attrs))}><button class="absolute -left-8 top-1/2 z-10 flex h-16 w-16 items-center justify-center rounded-full bg-primaryBlue-500 hover:bg-primaryBlue-700 lg:hidden">`);
      _push(ssrRenderComponent(_component_UIcon, {
        name: "i-heroicons-bars-3",
        class: "h-[32px] w-[32px] text-white"
      }, null, _parent));
      _push(`</button><aside class="${ssrRenderClass([{
        "z-10 translate-x-0 shadow-2xl lg:z-0 lg:shadow-none": unref(showSidebar),
        "-translate-x-full": !unref(showSidebar)
      }, "fixed h-full w-[252px] shrink-0 -translate-x-full transform bg-primaryBlue-100 transition duration-300 ease-in-out lg:relative lg:flex lg:translate-x-0"])}"><div class="flex h-full flex-col"><div class="flex flex-col gap-[14px] px-6 pt-6"><div class="flex flex-col"><div class="flex">`);
      _push(ssrRenderComponent(_component_NuxtLink, { to: "/" }, {
        default: withCtx((_2, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_IconLogo, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_IconLogo)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><p class="flex justify-end text-[10px] font-bold uppercase text-sidebarListTitle"> version 10.0.2 </p></div><div>`);
      _push(ssrRenderComponent(_component_MenuUserProfile, {
        displayName: "Anderson Mark",
        email: "anderson.mark@gmail.com",
        notification: 13
      }, null, _parent));
      _push(`</div><div class="mx-auto h-[1px] w-[91px] bg-primaryBlue-400"></div></div><div class="flex flex-1 flex-col overflow-auto p-6">`);
      ssrRenderSlot(_ctx.$slots, "sidebar-area", {}, null, _push, _parent);
      _push(`</div></div></aside><div class="${ssrRenderClass([{ "opacity-20 lg:opacity-100": unref(showSidebar) }, "h-full w-full overflow-auto shadow-main"])}">`);
      ssrRenderSlot(_ctx.$slots, "main-area", {}, null, _push, _parent);
      _push(`</div></main>`);
    };
  }
};
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("layout/base-layout.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __nuxt_component_0 = _sfc_main;

export { __nuxt_component_0 as _, s, usePopper as u };
//# sourceMappingURL=base-layout-BFHzeL62.mjs.map
